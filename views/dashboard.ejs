<%- include('layout', {
    title: 'Dashboard - MixTrip',
    body: `
    <!-- Dashboard Header -->
    <section class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1 class="dashboard-title">My Dashboard</h1>
                    <p class="dashboard-subtitle">Manage your trips and activities</p>
                </div>
                <div class="col-md-6 text-md-end">
                    <a href="/trips/create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Create New Trip
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- Dashboard Content -->
    <section class="dashboard-content">
        <div class="container">
            <div class="row">
                <!-- Sidebar -->
                <div class="col-lg-3">
                    <div class="dashboard-sidebar">
                        <div class="user-info">
                            <div class="user-avatar">
                                <img src="/uploads/default-profile.jpg" alt="Profile" id="user-avatar" class="img-fluid rounded-circle">
                            </div>
                            <h3 class="user-name" id="user-name">Loading...</h3>
                            <p class="user-username" id="user-username">@loading</p>
                        </div>
                        
                        <div class="dashboard-nav">
                            <ul class="nav flex-column">
                                <li class="nav-item">
                                    <a class="nav-link active" href="#my-trips">
                                        <i class="fas fa-map-marked-alt"></i> My Trips
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#saved-trips">
                                        <i class="fas fa-bookmark"></i> Saved Trips
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="/profile">
                                        <i class="fas fa-user-circle"></i> Profile
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="/settings">
                                        <i class="fas fa-cog"></i> Settings
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#" id="logout-link">
                                        <i class="fas fa-sign-out-alt"></i> Logout
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                
                <!-- Main Content -->
                <div class="col-lg-9">
                    <!-- Stats Cards -->
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <div class="stats-card">
                                <div class="stats-icon">
                                    <i class="fas fa-suitcase"></i>
                                </div>
                                <div class="stats-info">
                                    <h3 class="stats-number" id="trips-count">0</h3>
                                    <p class="stats-text">Total Trips</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stats-card">
                                <div class="stats-icon">
                                    <i class="fas fa-eye"></i>
                                </div>
                                <div class="stats-info">
                                    <h3 class="stats-number" id="views-count">0</h3>
                                    <p class="stats-text">Total Views</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stats-card">
                                <div class="stats-icon">
                                    <i class="fas fa-heart"></i>
                                </div>
                                <div class="stats-info">
                                    <h3 class="stats-number" id="likes-count">0</h3>
                                    <p class="stats-text">Total Likes</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- My Trips Section -->
                    <div class="content-section" id="my-trips">
                        <div class="section-header">
                            <h2 class="section-title">My Trips</h2>
                            <div class="section-actions">
                                <select class="form-select form-select-sm" id="trip-filter">
                                    <option value="all">All Trips</option>
                                    <option value="public">Public</option>
                                    <option value="private">Private</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="alert alert-info d-none" id="no-trips-message">
                            You haven't created any trips yet. <a href="/trips/create">Create your first trip!</a>
                        </div>
                        
                        <div class="row" id="trips-container">
                            <!-- Trip cards will be loaded here -->
                            <div class="col-12 text-center py-5">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                                <p class="mt-2">Loading your trips...</p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Saved Trips Section -->
                    <div class="content-section d-none" id="saved-trips">
                        <div class="section-header">
                            <h2 class="section-title">Saved Trips</h2>
                        </div>
                        
                        <div class="alert alert-info" id="no-saved-trips-message">
                            You haven't saved any trips yet. <a href="/explore">Explore trips</a> to find and save interesting journeys!
                        </div>
                        
                        <div class="row" id="saved-trips-container">
                            <!-- Saved trip cards will be loaded here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Trip Card Template -->
    <template id="trip-card-template">
        <div class="col-md-6 col-lg-4 mb-4">
            <div class="trip-card">
                <div class="trip-image">
                    <img src="" alt="" class="img-fluid">
                    <div class="trip-badge"></div>
                </div>
                <div class="trip-content">
                    <h3 class="trip-title"></h3>
                    <p class="trip-dates"></p>
                    <p class="trip-location"></p>
                    <div class="trip-stats">
                        <span><i class="fas fa-eye"></i> <span class="views-count"></span></span>
                        <span><i class="fas fa-heart"></i> <span class="likes-count"></span></span>
                        <span><i class="fas fa-comment"></i> <span class="comments-count"></span></span>
                    </div>
                    <div class="trip-actions">
                        <a href="" class="btn btn-sm btn-outline-primary view-trip-btn">View</a>
                        <a href="" class="btn btn-sm btn-outline-secondary edit-trip-btn">Edit</a>
                        <button class="btn btn-sm btn-outline-danger delete-trip-btn">Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </template>
    `,
    scripts: `
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check if user is logged in
            const token = localStorage.getItem('token');
            if (!token) {
                window.location.href = '/login';
                return;
            }
            
            // Logout functionality
            document.getElementById('logout-link').addEventListener('click', function(e) {
                e.preventDefault();
                localStorage.removeItem('token');
                localStorage.removeItem('remember');
                window.location.href = '/';
            });
            
            // Tab navigation
            const navLinks = document.querySelectorAll('.dashboard-nav .nav-link');
            const contentSections = document.querySelectorAll('.content-section');
            
            navLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    if (this.getAttribute('href').startsWith('#')) {
                        e.preventDefault();
                        
                        // Remove active class from all links
                        navLinks.forEach(l => l.classList.remove('active'));
                        
                        // Add active class to clicked link
                        this.classList.add('active');
                        
                        // Hide all content sections
                        contentSections.forEach(section => section.classList.add('d-none'));
                        
                        // Show selected section
                        const targetId = this.getAttribute('href').substring(1);
                        document.getElementById(targetId).classList.remove('d-none');
                    }
                });
            });
            
            // Fetch user data
            fetchUserData();
            
            // Fetch trips
            fetchTrips();
            
            // Trip filter change
            document.getElementById('trip-filter').addEventListener('change', function() {
                fetchTrips(this.value);
            });
        });
        
        // Fetch user data
        async function fetchUserData() {
            try {
                const response = await fetch('/api/auth/me', {
                    method: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                });
                
                if (!response.ok) {
                    throw new Error('Failed to fetch user data');
                }
                
                const user = await response.json();
                
                // Update user info
                document.getElementById('user-name').textContent = user.name;
                document.getElementById('user-username').textContent = '@' + user.username;
                
                // Update avatar if custom one exists
                if (user.profileImage && user.profileImage !== 'default-profile.jpg') {
                    document.getElementById('user-avatar').src = '/uploads/' + user.profileImage;
                }
                
            } catch (error) {
                console.error('Error fetching user data:', error);
                // If authentication fails, redirect to login
                if (error.message === 'Failed to fetch user data') {
                    localStorage.removeItem('token');
                    window.location.href = '/login';
                }
            }
        }
        
        // Fetch trips data
        async function fetchTrips(filter = 'all') {
            try {
                let url = '/api/trips?user=' + 'me'; // 'me' will be handled server-side
                
                if (filter === 'public') {
                    url += '&public=true';
                } else if (filter === 'private') {
                    url += '&public=false';
                }
                
                const response = await fetch(url, {
                    method: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                });
                
                if (!response.ok) {
                    throw new Error('Failed to fetch trips');
                }
                
                const data = await response.json();
                const trips = data.trips;
                
                // Update stats
                document.getElementById('trips-count').textContent = trips.length;
                
                let totalViews = 0;
                let totalLikes = 0;
                
                trips.forEach(trip => {
                    totalViews += trip.views || 0;
                    totalLikes += trip.likes ? trip.likes.length : 0;
                });
                
                document.getElementById('views-count').textContent = totalViews;
                document.getElementById('likes-count').textContent = totalLikes;
                
                // Clear loading indicator
                const tripsContainer = document.getElementById('trips-container');
                tripsContainer.innerHTML = '';
                
                // Show message if no trips
                if (trips.length === 0) {
                    document.getElementById('no-trips-message').classList.remove('d-none');
                } else {
                    document.getElementById('no-trips-message').classList.add('d-none');
                    
                    // Create trip cards
                    const template = document.getElementById('trip-card-template');
                    
                    trips.forEach(trip => {
                        const clone = document.importNode(template.content, true);
                        
                        // Set image
                        const imageEl = clone.querySelector('.trip-image img');
                        imageEl.src = trip.coverImage ? '/uploads/' + trip.coverImage : 'https://placehold.co/600x400/3498db/FFF?text=Trip';
                        imageEl.alt = trip.title;
                        
                        // Set privacy badge
                        const badgeEl = clone.querySelector('.trip-badge');
                        badgeEl.textContent = trip.isPublic ? 'Public' : 'Private';
                        badgeEl.classList.add(trip.isPublic ? 'badge-success' : 'badge-secondary');
                        
                        // Set content
                        clone.querySelector('.trip-title').textContent = trip.title;
                        
                        // Format dates
                        let dateText = 'No dates specified';
                        if (trip.startDate && trip.endDate) {
                            const start = new Date(trip.startDate).toLocaleDateString();
                            const end = new Date(trip.endDate).toLocaleDateString();
                            dateText = start + ' - ' + end;
                        } else if (trip.startDate) {
                            dateText = 'From ' + new Date(trip.startDate).toLocaleDateString();
                        }
                        clone.querySelector('.trip-dates').textContent = dateText;
                        
                        // Location
                        clone.querySelector('.trip-location').textContent = trip.location || 'No location specified';
                        
                        // Stats
                        clone.querySelector('.views-count').textContent = trip.views || 0;
                        clone.querySelector('.likes-count').textContent = trip.likes ? trip.likes.length : 0;
                        clone.querySelector('.comments-count').textContent = 0; // Will be populated when comments are implemented
                        
                        // Action buttons
                        const viewBtn = clone.querySelector('.view-trip-btn');
                        viewBtn.href = '/trips/' + trip._id;
                        
                        const editBtn = clone.querySelector('.edit-trip-btn');
                        editBtn.href = '/trips/edit/' + trip._id;
                        
                        const deleteBtn = clone.querySelector('.delete-trip-btn');
                        deleteBtn.dataset.tripId = trip._id;
                        deleteBtn.addEventListener('click', confirmDeleteTrip);
                        
                        tripsContainer.appendChild(clone);
                    });
                }
                
            } catch (error) {
                console.error('Error fetching trips:', error);
                document.getElementById('trips-container').innerHTML = 
                    '<div class="col-12"><div class="alert alert-danger">Error loading trips. Please try again later.</div></div>';
            }
        }
        
        // Delete trip confirmation
        function confirmDeleteTrip(e) {
            const tripId = this.dataset.tripId;
            
            if (confirm('Are you sure you want to delete this trip? This action cannot be undone.')) {
                deleteTrip(tripId);
            }
        }
        
        // Delete trip API call
        async function deleteTrip(tripId) {
            try {
                const response = await fetch('/api/trips/' + tripId, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    }
                });
                
                if (!response.ok) {
                    throw new Error('Failed to delete trip');
                }
                
                // Refresh trips list
                fetchTrips(document.getElementById('trip-filter').value);
                
            } catch (error) {
                console.error('Error deleting trip:', error);
                alert('Error deleting trip. Please try again later.');
            }
        }
    </script>
    `
}) %>
